From 0a3d303d726df0bc0f97e99d3116b8972f92bf00 Mon Sep 17 00:00:00 2001
From: Vishesh Handa <me@vhanda.in>
Date: Fri, 25 Apr 2014 16:28:38 +0200
Subject: [PATCH 08/28] XapianSearchStore: Catch the database modified
 exception

The database can get modified in the middle

BUG: 333761
FIXED-IN: 4.13.1
---
 src/xapian/xapiansearchstore.cpp | 69 +++++++++++++++++++++++-----------------
 1 file changed, 39 insertions(+), 30 deletions(-)

diff --git a/src/xapian/xapiansearchstore.cpp b/src/xapian/xapiansearchstore.cpp
index 0edf99a..76e3b1d 100644
--- a/src/xapian/xapiansearchstore.cpp
+++ b/src/xapian/xapiansearchstore.cpp
@@ -205,43 +205,52 @@ int XapianSearchStore::exec(const Query& query)
     if (!m_db)
         return 0;
 
-    QMutexLocker lock(&m_mutex);
-    try {
-        m_db->reopen();
-    } catch (Xapian::DatabaseError& e) {
-        kWarning() << "Failed to reopen database" << dbPath() << ":" <<  QString::fromStdString(e.get_msg());
-        return 0;
-    }
+    while (1) {
+        try {
+            QMutexLocker lock(&m_mutex);
+            try {
+                m_db->reopen();
+            } catch (Xapian::DatabaseError& e) {
+                kWarning() << "Failed to reopen database" << dbPath() << ":" <<  QString::fromStdString(e.get_msg());
+                return 0;
+            }
 
-    QTime queryGenerationTimer;
-    queryGenerationTimer.start();
+            QTime queryGenerationTimer;
+            queryGenerationTimer.start();
 
-    Xapian::Query xapQ = toXapianQuery(query.term());
-    if (query.searchString().size()) {
-        QString str = query.searchString();
+            Xapian::Query xapQ = toXapianQuery(query.term());
+            if (query.searchString().size()) {
+                QString str = query.searchString();
 
-        Xapian::Query q = constructSearchQuery(str);
-        xapQ = andQuery(xapQ, q);
-    }
-    xapQ = andQuery(xapQ, convertTypes(query.types()));
-    xapQ = andQuery(xapQ, constructFilterQuery(query.yearFilter(), query.monthFilter(), query.dayFilter()));
-    xapQ = applyCustomOptions(xapQ, query.customOptions());
-    xapQ = finalizeQuery(xapQ);
+                Xapian::Query q = constructSearchQuery(str);
+                xapQ = andQuery(xapQ, q);
+            }
+            xapQ = andQuery(xapQ, convertTypes(query.types()));
+            xapQ = andQuery(xapQ, constructFilterQuery(query.yearFilter(), query.monthFilter(), query.dayFilter()));
+            xapQ = applyCustomOptions(xapQ, query.customOptions());
+            xapQ = finalizeQuery(xapQ);
+
+            Xapian::Enquire enquire(*m_db);
+            kDebug() << xapQ.get_description().c_str();
+            enquire.set_query(xapQ);
 
-    Xapian::Enquire enquire(*m_db);
-    kDebug() << xapQ.get_description().c_str();
-    enquire.set_query(xapQ);
+            kDebug() << "Query Generation" << queryGenerationTimer.elapsed();
 
-    kDebug() << "Query Generation" << queryGenerationTimer.elapsed();
+            Result& res = m_queryMap[m_nextId++];
+            QTime timer;
+            timer.start();
+            res.mset = enquire.get_mset(query.offset(), query.limit());
+            res.it = res.mset.begin();
 
-    Result& res = m_queryMap[m_nextId++];
-    QTime timer;
-    timer.start();
-    res.mset = enquire.get_mset(query.offset(), query.limit());
-    res.it = res.mset.begin();
+            kDebug() << "Exec" << timer.elapsed() << "msecs";
+            return m_nextId-1;
+        }
+        catch (const Xapian::DatabaseModifiedError&) {
+            continue;
+        }
+    }
 
-    kDebug() << "Exec" << timer.elapsed() << "msecs";
-    return m_nextId-1;
+    return 0;
 }
 
 void XapianSearchStore::close(int queryId)
-- 
1.9.0

