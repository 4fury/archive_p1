--- bin/service.py~	2013-06-26 20:20:43.961591507 +0200
+++ bin/service.py	2013-06-26 20:21:42.571589365 +0200
@@ -261,8 +261,8 @@
 
     def cleanup():
         try:
-            os.unlink("/var/run/dbus/pid")
-            os.unlink("/var/run/dbus/system_bus_socket")
+            os.unlink("/run/dbus/pid")
+            os.unlink("/run/dbus/system_bus_socket")
         except OSError:
             pass
     if op == "start":
@@ -272,15 +272,15 @@
         if not os.path.exists("/var/lib/dbus/machine-id"):
             run("/usr/bin/dbus-uuidgen", "--ensure")
         run("/sbin/start-stop-daemon", "-b", "--start", "--quiet",
-            "--pidfile", "/var/run/dbus/pid", "--exec", "/usr/bin/dbus-daemon",
+            "--pidfile", "/run/dbus/pid", "--exec", "/usr/bin/dbus-daemon",
             "--", "--system")
-        if not waitBus("/var/run/dbus/system_bus_socket", timeout=20):
+        if not waitBus("/run/dbus/system_bus_socket", timeout=20):
             print _("Unable to start DBus")
             return -1
     elif op == "stop":
         if not quiet:
             print _("Stopping %s") % "DBus"
-        run("/sbin/start-stop-daemon", "--stop", "--quiet", "--pidfile", "/var/run/dbus/pid")
+        run("/sbin/start-stop-daemon", "--stop", "--quiet", "--pidfile", "/run/dbus/pid")
         cleanup()
     elif op == "restart":
         manage_dbus("stop", use_color, quiet)
--- bin/mudur.py~	2013-06-26 20:21:28.968589862 +0200
+++ bin/mudur.py	2013-06-26 20:56:58.170512066 +0200
@@ -678,6 +678,14 @@
         UI.error(_("Cannot connect to DBus, services won't be started"))
         return
 
+    for path in os.walk("/var/rundirs/"):
+        path = path[0][13:]
+        if not path: continue
+        if not os.path.exists("/run/%s" % path): os.makedirs("/run/%s" % path)
+        s = os.stat("/var/rundirs/%s" % path)
+        os.chmod("/run/%s" % path, stat.S_IMODE(s.st_mode))
+        os.chown("/run/%s" % path, s.st_uid, s.st_gid)
+
     if extras:
         # Start only the services given in extras
         for service in extras:
@@ -1124,11 +1132,11 @@
 # Filesystem cleanup methods #
 ##############################
 
-def cleanup_var():
-    """Cleans up /var upon boot."""
-    UI.info(_("Cleaning up /var"))
+def cleanup_run():
+    """Cleans up /run upon boot."""
+    UI.info(_("Cleaning up /run"))
     blacklist = ["utmp", "random-seed", "livemedia"]
-    for root, dirs, files in os.walk("/var/run"):
+    for root, dirs, files in os.walk("/run"):
         for _file in files:
             if _file not in blacklist:
                 try:
@@ -1407,7 +1415,7 @@
         run_sysctl()
 
         # Cleanup /var
-        cleanup_var()
+        cleanup_run()
 
         # Update environment variables according to the modification
         # time of the relevant files
