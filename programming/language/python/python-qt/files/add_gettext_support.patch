diff -Nuar a/pyuic/uic/driver.py b/pyuic/uic/driver.py
--- a/pyuic/uic/driver.py	2013-08-21 08:51:08.000000000 +0300
+++ b/pyuic/uic/driver.py	2013-09-10 03:55:08.004732985 +0300
@@ -29,6 +29,19 @@
 import logging
 
 from PyQt4.uic import compileUi, loadUi
+from PyQt4.uic.Compiler import qtproxies
+ 
+original_i18n_string = qtproxies.i18n_string
+class i18n_string(qtproxies.i18n_string):
+    def __init__(self, string, disambig=None):
+        original_i18n_string.__init__(self, string, disambig)
+    def __str__(self):
+        return "i18n(%s)" % (qtproxies.as_string(self.string, encode=False),)
+
+_gettext_header = """import gettext
+__trans = gettext.translation('%s', fallback=True)
+i18n = __trans.ugettext
+"""
 
 
 class Driver(object):
@@ -43,6 +56,8 @@
         name of the .ui file.
         """
 
+        self.gettext_header = ''
+
         if opts.debug:
             logger = logging.getLogger(self.LOGGER_NAME)
             handler = logging.StreamHandler()
@@ -50,6 +65,11 @@
             logger.addHandler(handler)
             logger.setLevel(logging.DEBUG)
 
+        if not opts.gettext_domain == '':
+            qtproxies.i18n_string = i18n_string
+            self.gettext_header = _gettext_header % opts.gettext_domain
+
+
         self._opts = opts
         self._ui_file = ui_file
 
@@ -95,7 +115,7 @@
                 pyfile = open(self._opts.output, 'wt')
 
         compileUi(self._ui_file, pyfile, self._opts.execute, self._opts.indent,
-                self._opts.pyqt3_wrapper, self._opts.from_imports,
+                self._opts.pyqt3_wrapper, self._opts.from_imports, self.gettext_header,
                 self._opts.resource_suffix)
 
     def on_IOError(self, e):
diff -Nuar a/pyuic/uic/__init__.py b/pyuic/uic/__init__.py
--- a/pyuic/uic/__init__.py	2013-08-21 08:51:08.000000000 +0300
+++ b/pyuic/uic/__init__.py	2013-09-10 03:58:29.177726019 +0300
@@ -138,7 +138,7 @@
                 compile_ui(dir, ui)
 
 
-def compileUi(uifile, pyfile, execute=False, indent=4, pyqt3_wrapper=False, from_imports=False, resource_suffix='_rc'):
+def compileUi(uifile, pyfile, execute=False, indent=4, pyqt3_wrapper=False, from_imports=False, resource_suffix='_rc' ,additional_text=''):
     """compileUi(uifile, pyfile, execute=False, indent=4, pyqt3_wrapper=False, from_imports=False, resource_suffix='_rc')
 
     Creates a Python module from a Qt Designer .ui file.
@@ -172,6 +172,9 @@
 
     pyfile.write(_header % (uifname, ctime(), PYQT_VERSION_STR))
 
+    if not additional_text == '':
+        pyfile.write(additional_text)
+
     winfo = compiler.UICompiler().compileUi(uifile, pyfile, from_imports, resource_suffix)
 
     if pyqt3_wrapper:
diff -Nuar a/pyuic/uic/pyuic.py b/pyuic/uic/pyuic.py
--- a/pyuic/uic/pyuic.py	2013-08-21 08:51:08.000000000 +0300
+++ b/pyuic/uic/pyuic.py	2013-09-10 03:59:19.902724263 +0300
@@ -53,6 +53,8 @@
         help="generate extra code to test and display the class")
 parser.add_option("-d", "--debug", dest="debug", action="store_true",
         default=False, help="show debug output")
+parser.add_option("-g", "--use-gettext", dest="gettext_domain", action="store", type="str",
+        default='', help="use gettext for following domain")
 parser.add_option("-i", "--indent", dest="indent", action="store", type="int",
         default=4, metavar="N",
         help="set indent width to N spaces, tab if N is 0 [default: 4]")
