Index: include/mpakogre.h
===================================================================
--- include/mpakogre.h.orig
+++ include/mpakogre.h
@@ -49,6 +49,7 @@ public:
 	void unload();
 
 	DataStreamPtr open(const String &filename) const;
+	DataStreamPtr open(const String &filename, bool) const { return open(filename); };
 	StringVectorPtr list(bool recursive = true, bool dirs = false);
 	FileInfoListPtr listFileInfo(bool recursive = true, bool dirs = false);
 
Index: include/objectsystem.h
===================================================================
--- include/objectsystem.h.orig
+++ include/objectsystem.h
@@ -34,7 +34,7 @@
 using namespace std;
 using namespace Ogre;
 
-typedef map<String, MovingObject*> ObjectMapType;
+typedef std::map<String, MovingObject*> ObjectMapType;
 
 // ObjectSystem
 class ObjectSystem : public Singleton<ObjectSystem> {
Index: include/openalsoundsystem.h
===================================================================
--- include/openalsoundsystem.h.orig
+++ include/openalsoundsystem.h
@@ -47,7 +47,7 @@ using namespace Ogre;
 using namespace std;
 
 
-typedef map<String, ALuint> SoundMapType;
+typedef std::map<String, ALuint> SoundMapType;
 
 // Number of independent channels for sound fx
 const int NUM_SOUND_CHANNELS = 32;
Index: src/mp3stream.cpp
===================================================================
--- src/mp3stream.cpp.orig
+++ src/mp3stream.cpp
@@ -1,4 +1,4 @@
-//****************************************************************************
+/****************************************************************************
 // "Those Funny Funguloids!"
 // http://funguloids.sourceforge.net
 // Copyright (c) 2006-2007, Mika Halttunen
@@ -31,7 +31,9 @@
 #endif
 
 #ifdef SOUND_STREAM_MP3
-
+#include <unistd.h>
+#include <cstdlib>
+#include <sys/types.h>
 #include <sys/stat.h>
 #include <sstream>
 #include <climits>
@@ -233,7 +235,7 @@ void MP3Stream::rewindFile( )
 //----------------------------------------------------------------------------
 void MP3Stream::logInfo( struct mad_header *Header )
 {
-	stringstream ss;
+	std::stringstream ss;
 
 	/* Convert the layer number to it's printed representation. */
 	ss << "mpeg 1 layer ";
Index: src/oggstream.cpp
===================================================================
--- src/oggstream.cpp.orig
+++ src/oggstream.cpp
@@ -269,7 +269,7 @@ void OggStream::rewindOggFile( )
 //----------------------------------------------------------------------------
 void OggStream::logInfo()
 {
-	stringstream ss;
+	std::stringstream ss;
 	ss	<< "version         " << mVorbisInfo->version         << "\n"
 		<< "channels        " << mVorbisInfo->channels        << "\n"
 		<< "rate (hz)       " << mVorbisInfo->rate            << "\n"
Index: src/openalsoundsystem.cpp
===================================================================
--- src/openalsoundsystem.cpp.orig
+++ src/openalsoundsystem.cpp
@@ -287,7 +287,7 @@ int OpenALSoundSystem::initialise( unsig
 		LogManager::getSingleton().logMessage("OpenALSoundSystem(): initialised OpenAL" );
 	}
 
-	stringstream ss;
+	std::stringstream ss;
 	ss << "OpenAL Vendor: " << alGetString(AL_VENDOR) << std::endl;
 	ss << "OpenAL Version: " << alGetString(AL_VERSION) << std::endl;
 	ss << "OpenAL Renderer: " << alGetString(AL_RENDERER) << std::endl;
Index: src/playlist.cpp
===================================================================
--- src/playlist.cpp.orig
+++ src/playlist.cpp
@@ -42,7 +42,7 @@
 using namespace std;
 
 // Play list files
-static vector<String> playList;
+static std::vector<String> playList;
 static unsigned int currentSong = -1;
 
 
Index: src/scriptsystem.cpp
===================================================================
--- src/scriptsystem.cpp.orig
+++ src/scriptsystem.cpp
@@ -48,7 +48,7 @@ void luaError(const String &str) {
 
 
 // This keeps track of the lights created in script
-static vector<Light*> scriptLights;
+static std::vector<Light*> scriptLights;
 
 
 // File locator for script files
