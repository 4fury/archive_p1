Index: funguloids/src/scriptsystem.cpp
===================================================================
--- funguloids.orig/src/scriptsystem.cpp
+++ funguloids/src/scriptsystem.cpp
@@ -38,7 +38,7 @@
 #include "mpakogre.h"
 #include <vector>
 
-template<> ScriptSystem* Singleton<ScriptSystem>::ms_Singleton = 0;
+template<> ScriptSystem* Singleton<ScriptSystem>::msSingleton = 0;
 
 
 // Log error messages
@@ -406,24 +406,24 @@ static int GetNextSong(lua_State *L) {
 	String song = getNextSong();
 	lua_pushstring(L, song.c_str());
 	return 1;
-}
-
-
-// Get the music directory
-// $HOME/music/ on Linux, the ./music/ on Windows
-static int GetMusicDir(lua_State *L) {
-	// Return the music directory
-	String dir;
-
-#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32	// For Windows
+}
+
+
+// Get the music directory
+// $HOME/music/ on Linux, the ./music/ on Windows
+static int GetMusicDir(lua_State *L) {
+	// Return the music directory
+	String dir;
+
+#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32	// For Windows
 	dir = "music/";
 #else							// For Linux/Unix/etc.
-	extern String getFunguloidsDir();
-	dir = getFunguloidsDir() + "music/";
-#endif
-
-	lua_pushstring(L, dir.c_str());
-	return 1;	
+	extern String getFunguloidsDir();
+	dir = getFunguloidsDir() + "music/";
+#endif
+
+	lua_pushstring(L, dir.c_str());
+	return 1;	
 }
 
 ////////////////////////////////////////////
@@ -464,7 +464,7 @@ ScriptSystem::ScriptSystem(SceneManager
 	lua_register(mLuaVM, "PlayMusic", PlayMusic);
 	lua_register(mLuaVM, "AddToPlaylist", AddToPlaylist);
 	lua_register(mLuaVM, "ShufflePlaylist", ShufflePlaylist);
-	lua_register(mLuaVM, "GetNextSong", GetNextSong);
+	lua_register(mLuaVM, "GetNextSong", GetNextSong);
 	lua_register(mLuaVM, "GetMusicDir", GetMusicDir);
 	LogManager::getSingleton().logMessage("ScriptSystem created.");
 
@@ -563,12 +563,12 @@ bool ScriptSystem::executeScript(const c
 
 
 ScriptSystem *ScriptSystem::getSingletonPtr() {
-	return ms_Singleton;
+	return msSingleton;
 }
 
 ScriptSystem &ScriptSystem::getSingleton() {
-	assert(ms_Singleton);
-	return *ms_Singleton;
+	assert(msSingleton);
+	return *msSingleton;
 }
 
 
