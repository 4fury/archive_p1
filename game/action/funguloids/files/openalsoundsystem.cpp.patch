Index: funguloids/src/openalsoundsystem.cpp
===================================================================
--- funguloids.orig/src/openalsoundsystem.cpp
+++ funguloids/src/openalsoundsystem.cpp
@@ -21,9 +21,9 @@
 //
 //  3. This notice may not be removed or altered from any source distribution.
 //
-//***************************************************************************/
-
-// NOTICE: This file is written by Piet (thanks! :), <funguloids@superpiet.de>,
+//***************************************************************************/
+
+// NOTICE: This file is written by Piet (thanks! :), <funguloids@superpiet.de>,
 // for the Linux version of Funguloids.
 
 #include "soundsystem.h"
@@ -35,16 +35,16 @@
 #include "playlist.h"
 #include "mpakogre.h"
 
-template<> OpenALSoundSystem* Singleton<OpenALSoundSystem>::ms_Singleton = 0;
+template<> OpenALSoundSystem* Singleton<OpenALSoundSystem>::msSingleton = 0;
 
 OpenALSoundSystem* OpenALSoundSystem::getSingletonPtr() {
-	return ms_Singleton;
+	return msSingleton;
 }
 
 
 OpenALSoundSystem& OpenALSoundSystem::getSingleton() {
-	assert(ms_Singleton);
-	return *ms_Singleton;
+	assert(msSingleton);
+	return *msSingleton;
 }
 
 
@@ -312,12 +312,12 @@ int OpenALSoundSystem::initialise( unsig
 	mSoundChannels->setVolume(vol);
 
 	// add a music player
-	mStreamPlayer = new StreamPlayer();
-	
-	// Set the music volume
+	mStreamPlayer = new StreamPlayer();
+	
+	// Set the music volume
 	svol = GameApplication::mGameConfig->GetValue("audio", "music_volume", "1.0");
 	vol = StringConverter::parseReal(svol);
-	mStreamPlayer->setVolume(vol);
+	mStreamPlayer->setVolume(vol);
 	
 	return 0;
 }
@@ -480,14 +480,14 @@ void OpenALSoundSystem::playMusic(const
 	if(mSoundDisabled) return;
 	if(file.empty()) return;
 	LogManager::getSingleton().logMessage("Going to play '" + file + "'..");
-	assert(mStreamPlayer);
-	
-	// Set the volume
+	assert(mStreamPlayer);
+	
+	// Set the volume
 	String svol = GameApplication::mGameConfig->GetValue("audio", "music_volume", "1.0");
 	Real vol = StringConverter::parseReal(svol);
 	
 	mStreamPlayer->play(file);
-	mStreamPlayer->setVolume(vol);
+	mStreamPlayer->setVolume(vol);
 }
 
 
